{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-74a73571\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"title\", null, \"\\\"Compound Interest Calculator\\\"\", -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"body\", null, [_hoisted_1, _createElementVNode(\"section\", null, [_withDirectives(_createElementVNode(\"input\", {\n    placeholder: \"Principal (P) (INR) \",\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.num1 = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.num1, void 0, {\n    number: true\n  }]]), _withDirectives(_createElementVNode(\"input\", {\n    placeholder: \"Interest Rate (R) (%)\",\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.num2 = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.num2, void 0, {\n    number: true\n  }]]), _withDirectives(_createElementVNode(\"input\", {\n    placeholder: \"Compound Period (n) (Month)\",\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.num2 = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.num2, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"h2\", null, _toDisplayString($data.monthlyPayment), 1\n  /* TEXT */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.Calculate && $options.Calculate(...args))\n  }, \"\\\"Calculate Compound Interest\\\"\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.Clear && $options.Clear(...args))\n  }, \"\\\"Clear\\\"\")]);\n}","map":{"version":3,"mappings":";;;;gEAEQA,oBAA6C,OAA7C,EAA6C,IAA7C,EAAO,kCAAP,EAAqC;AAAA;AAArC;;;uBADJC,oBAUO,MAVP,EAUO,IAVP,EAUO,CATHC,UASG,EARPF,oBAIU,SAJV,EAIU,IAJV,EAIU,iBAHNA,oBAA8E,OAA9E,EAA8E;AAAvEG,eAAW,EAAC,sBAA2D;AAApCC,QAAI,EAAC,QAA+B;+DAANC,YAAIC;AAAE,GAA9E;;AAAA,oBAAwED;YAAhB;MAGlD,kBAFNL,oBAA+E,OAA/E,EAA+E;AAAxEG,eAAW,EAAC,uBAA4D;AAApCC,QAAI,EAAC,QAA+B;+DAANC,YAAIC;AAAE,GAA/E;;AAAA,oBAAyED;YAAhB;MAEnD,kBADNL,oBAAqF,OAArF,EAAqF;AAA9EG,eAAW,EAAC,6BAAkE;AAApCC,QAAI,EAAC,QAA+B;+DAANC,YAAIC;AAAE,GAArF;;AAAA,oBAA+ED;YAAhB;MACzD,CAJV,CAQO,EAHPL,oBAA2B,IAA3B,EAA2B,IAA3B,EAA2BO,iBAArBC,oBAAqB,CAA3B,EAAoB;AAAA;AAApB,GAGO,EAFPR,oBAAiE,QAAjE,EAAiE;AAAxDS,WAAK,yCAAEC,iDAAF;AAAmD,GAAjE,EAA2B,iCAA3B,CAEO,EADPV,oBAAuC,QAAvC,EAAuC;AAA9BS,WAAK,yCAAEC,yCAAF;AAAyB,GAAvC,EAAuB,WAAvB,CACO,CAVP","names":["_createElementVNode","_createElementBlock","_hoisted_1","placeholder","type","_ctx","$event","_toDisplayString","$data","onClick","$options"],"sourceRoot":"","sources":["/Users/scet/Desktop/Rachana/mycalc-app/src/components/CompundCalc.vue"],"sourcesContent":["<template>\n    <body>\n        <title>\"Compound Interest Calculator\"</title>\n    <section>\n        <input placeholder=\"Principal (P) (INR) \" type=\"number\" v-model.number=\"num1\">\n        <input placeholder=\"Interest Rate (R) (%)\" type=\"number\" v-model.number=\"num2\">\n        <input placeholder=\"Compound Period (n) (Month)\" type=\"number\" v-model.number=\"num2\">\n    </section>\n    <h2>{{monthlyPayment}}</h2>\n    <button @click=\"Calculate\">\"Calculate Compound Interest\"</button> \n    <button @click=\"Clear\">\"Clear\"</button> \n    </body>\n</template>\n\n<script>\nexport default {\n  //name: 'HelloWorld',\n  //props: {\n    //msg: String\n  //},\n  data() {\n    return {\n      P: 0,\n      R: 0,\n      n: 0,\n      monthlyPayment: 0,\n    };\n  }, \n  computed: {\n    formValid() {\n      const { P, R, n } = this;\n      return (\n        +P >= 0 &&\n        0 <= +R &&\n        +R <= 100 &&\n        +n > 0\n      );\n    },\n  },  \n  methods: {\n    Calculate(){\n        if (!this.formValid) {\n            return;\n        }\n        const { P, R, n } = this;\n      this.monthlyPayment = (P * (1 + R / 100)) / n;    \n    },\n\n    Clear(){\n        this.p=0\n        this.R=0\n        this.n=0\n    },  \n  },\n};\n</script>\n\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}